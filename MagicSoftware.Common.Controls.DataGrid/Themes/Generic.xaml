<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:cells="clr-namespace:MagicSoftware.Common.Controls.Table.CellTypes"
                    xmlns:local="clr-namespace:MagicSoftware.Common.Controls.Table"
                    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">

    <!--  Brushes for the grid  -->
    <LinearGradientBrush x:Key="GridColumnHeaderGradient" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.4" Color="#FFFFFFFF" />
        <GradientStop Offset="0.4" Color="#FFEEEEEF" />
        <GradientStop Offset="1" Color="#FFDEDFE1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="GridColumnHeaderGradientMouseOver" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.4" Color="#FFFFFFFF" />
        <GradientStop Offset="0.4" Color="#FFE1E1E2" />
        <GradientStop Offset="1" Color="#FFD1D1D1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="GridRowHeaderGradient" StartPoint="0,0" EndPoint="0.1,1">
        <GradientStop Offset="0" Color="#FFE6E6E6" />
        <GradientStop Offset="1" Color="#FFFEFEFE" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="GridRowSeletecGradient" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#FFFEECB5" />
        <GradientStop Offset="0.4" Color="#FFFEECB5" />
        <GradientStop Offset="0.4001" Color="#FFebd795" />
        <GradientStop Offset="1" Color="#FFdec876" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="GridRowIndexHeaderGradient" StartPoint="0,0" EndPoint="0.1,1">
        <GradientStop Offset="0" Color="#FFE6E6E6" />
        <GradientStop Offset="1" Color="#FFFEFEFE" />
    </LinearGradientBrush>

    <!--
        <Style TargetType="DataGrid:FolderControl">
        <Setter Property="ItemsPanel">
        <Setter.Value>
        <ItemsPanelTemplate>
        <DockPanel HorizontalAlignment="Stretch" Background="Transparent"  x:Name="HeaderRowDockPanel"   Margin="0,0,0,0"/>
        </ItemsPanelTemplate>
        </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="0,0,0,-1"/>
        <Setter Property="Template">
        <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGrid:FolderControl}" >
        <ControlTemplate.Resources>
        <ResourceDictionary>
        <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MagicSoftware.Common.Controls.Table;component/Styles/DatagridDefaultRowStyles.xaml"/>
        </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
        </ControlTemplate.Resources>
        <Border  BorderBrush="#FFCDDDE5" BorderThickness="0,0,0,2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <Border BorderBrush="#FFE4ECF1" BorderThickness="0,0,0,1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <Border x:Name="folderBorder" BorderThickness="0" Height="{TemplateBinding Height}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
        <Border.Background>
        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFE9F0F4" />
        <GradientStop Color="#FFDDE6ED" Offset="1"/>
        </LinearGradientBrush>
        </Border.Background>
        <Grid>
        <Grid.ColumnDefinitions>
        <ColumnDefinition  Width="50"/>
        <ColumnDefinition  Width="*"/>
        </Grid.ColumnDefinitions>
        <Expander x:Name="HeaderRowExpander" Width="50" Grid.Column="0" Margin="0,0,0,1"
        IsExpanded="{Binding Path=IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
        Style="{StaticResource DGDeafultGroupExpander}" >
        <Expander.Header>
        <StackPanel Orientation="Horizontal">
        <Image x:Name="img" />
        </StackPanel>
        </Expander.Header>
        </Expander>
        <ItemsPresenter Grid.Column="1" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
        </Grid>
        </Border>
        </Border>
        </Border>
        <ControlTemplate.Triggers>
        <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
        <Condition Binding="{Binding IsItemSelected}" Value="true" />
        </MultiDataTrigger.Conditions>
        <Setter Property="Background" TargetName="folderBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
        </MultiDataTrigger>
        </ControlTemplate.Triggers>
        </ControlTemplate>
        </Setter.Value>
        </Setter>
        </Style>
    -->

    <!--
        <Style x:Key="MgDataGridRowHeaderWithId"  TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Template">
        <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
        <Grid>
        <Border BorderBrush="Transparent"  x:Name="brdr" BorderThickness="0" Background="{StaticResource GridRowIndexHeaderGradient}" >
        <TextBlock  Margin="4,0" x:Name="txt" Foreground="#FF5F76A2" Text="{Binding Path=Data.Id}"/>
        </Border>
        </Grid>
        <ControlTemplate.Triggers>
        <DataTrigger  Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=DataGridRow}}" Value="true">
        <Setter Property="Background" TargetName="brdr" Value="#FFE5F1F1" />
        </DataTrigger>
        
        <DataTrigger  Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=DataGridRow}}" Value="true">
        <Setter Property="Background" TargetName="brdr" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
        </DataTrigger>
        <DataTrigger  Binding="{Binding IsItemSelected}" Value="true">
        <Setter Property="Background" TargetName="brdr" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
        </DataTrigger>
        </ControlTemplate.Triggers>
        </ControlTemplate>
        </Setter.Value>
        </Setter>
        </Style>
    -->
    <!--
        <Style x:Key="MgDataGridRowHeaderNoId"  TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Template">
        <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
        <Grid>
        <Border BorderBrush="Transparent"  x:Name="brdr" BorderThickness="0" Background="{StaticResource GridRowIndexHeaderGradient}" >
        <TextBlock  Margin="4,0" x:Name="txt" Foreground="#FF5F76A2" Text="{Binding Path=Id}"/>
        </Border>
        </Grid>
        <ControlTemplate.Triggers>
        <DataTrigger  Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=DataGridRow}}" Value="true">
        <Setter Property="Background" TargetName="brdr" Value="#FFE5F1F1" />
        </DataTrigger>
        
        <DataTrigger  Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=DataGridRow}}" Value="true">
        <Setter Property="Background" TargetName="brdr" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
        </DataTrigger>
        <DataTrigger  Binding="{Binding IsItemSelected}" Value="true">
        <Setter Property="Background" TargetName="brdr" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
        </DataTrigger>
        </ControlTemplate.Triggers>
        </ControlTemplate>
        </Setter.Value>
        </Setter>
        </Style>
    -->


    <DataTemplate x:Key="SimpleTextCellTemplate">
        <TextBlock Margin="2,0" Text="{Binding}" />
    </DataTemplate>

    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeWE" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--
        <Style TargetType="{x:Type MgDataGrid:MgDataGrid}">
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="Background" Value="Green" />
        <Setter Property="RowBackground" Value="White" />
        <Setter Property="AlternatingRowBackground" Value="#FFF4F4F4" />
        <Setter Property="AlternationCount" Value="2" />
        
        
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="SelectionMode" Value="Extended" />
        <Setter Property="RowHeight" Value="19" />
        <Setter Property="Foreground" Value="#FF000000" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="BorderBrush" Value="#FFA0A0A0" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="CanUserResizeColumns" Value="True" />
        <Setter Property="RowDetailsVisibilityMode" Value="Collapsed" />
        
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
        <Setter.Value>
        <ControlTemplate TargetType="{x:Type MgDataGrid:MgDataGrid}">
        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
        <ScrollViewer.Template>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
        <Grid>
        <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="*" />
        <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1" />
        <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" />
        <Grid Grid.Column="1" Grid.Row="2">
        <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
        <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" />
        </Grid>
        </Grid>
        </ControlTemplate>
        </ScrollViewer.Template>
        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </ScrollViewer>
        </Border>
        </ControlTemplate>
        </Setter.Value>
        </Setter>
        <Style.Triggers>
        <Trigger Property="IsGrouping" Value="true">
        <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
        </Trigger>
        </Style.Triggers>
        </Style>
    -->

    <Style TargetType="{x:Type DataGridCell}">

        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="1"
                            SnapsToDevicePixels="True">
                        <ContentPresenter Margin="8,0,8,0"
                                          VerticalAlignment="Center"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <!--  Background of a selected line  -->
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                <!--  Value="#FFB1E1AF"  -->
                <Setter Property="Foreground" Value="#FF000000" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <local:ObjectEqualityConverter x:Key="EqualityConverter" />

    <Style TargetType="DataGridRow">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Margin="2,0,0,0"
                               VerticalAlignment="Center"
                               Foreground="Red"
                               Text="!" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFE5F1F1" />
            </Trigger>

            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>

            <DataTrigger Value="True">
                <DataTrigger.Binding>
                    <MultiBinding Converter="{StaticResource EqualityConverter}">
                        <Binding Path="Item" RelativeSource="{x:Static RelativeSource.Self}" />
                        <Binding Path="CurrentItem" RelativeSource="{RelativeSource FindAncestor, AncestorType=DataGrid}" />
                    </MultiBinding>
                </DataTrigger.Binding>
                <!--<Setter Property="BorderBrush" Value="Red" />-->
                <!--<Setter Property="BorderThickness" Value="1" />-->
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderBrush" Value="#FF688CAF" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="MinRowHeight" Value="20" />
        <Setter Property="AlternationCount" Value="2" />
        <Setter Property="AlternatingRowBackground" Value="#fff4f4f4" />
        <Setter Property="RowHeaderWidth" Value="0" />
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="BorderThickness" Value="1" />

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <Border Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        SnapsToDevicePixels="True">
                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <!--
                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource GridRowSeletecGradient}" />
                            </Trigger>
                        -->
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Button Width="{Binding CellsPanelHorizontalOffset,
                                                                RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                Command="{x:Static DataGrid.SelectAllCommand}"
                                                Focusable="false"
                                                Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle,
                                                                                              TypeInTargetAssembly={x:Type DataGrid}}}"
                                                Visibility="{Binding HeadersVisibility,
                                                                     ConverterParameter={x:Static DataGridHeadersVisibility.All},
                                                                     Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                                                     RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                                        Grid.Column="1"
                                                                        Visibility="{Binding HeadersVisibility,
                                                                                             ConverterParameter={x:Static DataGridHeadersVisibility.Column},
                                                                                             Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                                                                             RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}">
                                            <DataGridColumnHeadersPresenter.Resources>
                                                <Style TargetType="{x:Type DataGridColumnHeader}">
                                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                                    <Setter Property="Background" Value="{DynamicResource GridColumnHeaderGradient}" />
                                                    <Setter Property="SnapsToDevicePixels" Value="true" />
                                                    <Setter Property="Foreground" Value="#FF344054" />
                                                    <Setter Property="FontFamily" Value="Tahoma" />
                                                    <Setter Property="FontWeight" Value="Normal" />
                                                    <Setter Property="FontSize" Value="12" />
                                                    <Setter Property="Padding" Value="8,0,8,0" />
                                                    <Setter Property="Height" Value="22" />
                                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                                    <Setter Property="BorderBrush" Value="#FFB2B2B2" />
                                                    <Setter Property="BorderThickness" Value="0,1,0,1" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                                                <ControlTemplate.Resources />
                                                                <Grid>
                                                                    <Microsoft_Windows_Themes:DataGridHeaderBorder Background="{TemplateBinding Background}"
                                                                                                                   BorderBrush="{TemplateBinding BorderBrush}"
                                                                                                                   BorderThickness="{TemplateBinding BorderThickness}"
                                                                                                                   IsClickable="{TemplateBinding CanUserSort}"
                                                                                                                   IsHovered="{TemplateBinding IsMouseOver}"
                                                                                                                   IsPressed="{TemplateBinding IsPressed}"
                                                                                                                   Padding="{TemplateBinding Padding}"
                                                                                                                   SeparatorBrush="{TemplateBinding SeparatorBrush}"
                                                                                                                   SeparatorVisibility="{TemplateBinding SeparatorVisibility}"
                                                                                                                   SortDirection="{TemplateBinding SortDirection}">
                                                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                    </Microsoft_Windows_Themes:DataGridHeaderBorder>

                                                                    <Border x:Name="columnHeaderLeftBorder"
                                                                            Width="1"
                                                                            HorizontalAlignment="Left"
                                                                            Background="#FFFFFFFF" />
                                                                    <Border x:Name="columnHeaderRightBorder"
                                                                            Width="1"
                                                                            HorizontalAlignment="Right"
                                                                            Background="#FFC8C9CD" />

                                                                    <!--  <Path Data="M0,0 L4,0 L2,2 L0,0" x:Name="sortDirectionArrow"  Fill="#FFF4F4F5" Visibility="Hidden" HorizontalAlignment="Center"  Margin="0,3,0,0" Stroke="Black" VerticalAlignment="Top" Height="7" Width="7"/>  -->

                                                                    <DockPanel Margin="0,0,5,0"
                                                                               HorizontalAlignment="Right"
                                                                               VerticalAlignment="Center"
                                                                               LastChildFill="False">
                                                                        <!--
                                                                            <Path Data="M0,0 L4,0 L2,2 L0,0" x:Name="sortDirectionUp"  Fill="Black" Visibility="Collapsed" HorizontalAlignment="Center"  Margin="0,3,0,0" Stroke="Black" VerticalAlignment="Top" Height="9" Width="9"/>
                                                                            <Path Data="M0,0 L4,0 L2,-2 L0,0" x:Name="sortDirectionDown"  Fill="Black" Visibility="Collapsed" HorizontalAlignment="Center"  Margin="0,3,0,0" Stroke="Black" VerticalAlignment="Top" Height="9" Width="9"/>
                                                                        -->
                                                                        <Path x:Name="sortDirectionUp"
                                                                              DockPanel.Dock="Top"
                                                                              Stroke="Black"
                                                                              StrokeThickness="0"
                                                                              Visibility="Collapsed">
                                                                            <Path.Data>
                                                                                <PathGeometry>
                                                                                    <PathFigure IsClosed="True" StartPoint="0.0,4.0">
                                                                                        <PathFigure.Segments>
                                                                                            <LineSegment Point="4.0,0.0" />
                                                                                            <LineSegment Point="8.0,4.0" />
                                                                                        </PathFigure.Segments>
                                                                                    </PathFigure>
                                                                                </PathGeometry>
                                                                            </Path.Data>

                                                                            <Path.Fill>
                                                                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                                                    <LinearGradientBrush.GradientStops>
                                                                                        <GradientStop Offset="0.0" Color="#FF333333" />
                                                                                        <!--  <GradientStop Color="#FF605E72" Offset="0.1"/>  -->
                                                                                        <GradientStop Offset="1.0" Color="#FF555555" />
                                                                                    </LinearGradientBrush.GradientStops>
                                                                                </LinearGradientBrush>
                                                                            </Path.Fill>
                                                                        </Path>
                                                                        <Path x:Name="sortDirectionDown"
                                                                              DockPanel.Dock="Top"
                                                                              Stroke="Black"
                                                                              StrokeThickness="0"
                                                                              Visibility="Collapsed">
                                                                            <Path.Data>
                                                                                <PathGeometry>
                                                                                    <PathFigure IsClosed="True" StartPoint="0.0,0.0">
                                                                                        <PathFigure.Segments>
                                                                                            <LineSegment Point="8.0,0.0" />
                                                                                            <LineSegment Point="4.0,4.0" />
                                                                                        </PathFigure.Segments>
                                                                                    </PathFigure>
                                                                                </PathGeometry>
                                                                            </Path.Data>

                                                                            <Path.Fill>
                                                                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                                                    <LinearGradientBrush.GradientStops>
                                                                                        <GradientStop Offset="0.0" Color="#FF333333" />
                                                                                        <!--  <GradientStop Color="#FF605E72" Offset="0.1"/>  -->
                                                                                        <GradientStop Offset="1.0" Color="#FF555555" />
                                                                                    </LinearGradientBrush.GradientStops>
                                                                                </LinearGradientBrush>
                                                                            </Path.Fill>
                                                                        </Path>
                                                                    </DockPanel>
                                                                    <Thumb x:Name="PART_LeftHeaderGripper"
                                                                           HorizontalAlignment="Left"
                                                                           Style="{StaticResource ColumnHeaderGripperStyle}" />
                                                                    <Thumb x:Name="PART_RightHeaderGripper"
                                                                           HorizontalAlignment="Right"
                                                                           Style="{StaticResource ColumnHeaderGripperStyle}" />
                                                                </Grid>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsEnabled" Value="True">
                                                                        <Setter Property="FontFamily" Value="Tahoma" />
                                                                        <Setter Property="FontWeight" Value="Normal" />
                                                                        <Setter Property="FontSize" Value="11" />
                                                                    </Trigger>
                                                                    <Trigger Property="SortDirection" Value="{x:Null}">
                                                                        <Setter Property="Background" Value="{StaticResource GridColumnHeaderGradient}" />
                                                                        <Setter Property="BorderBrush" Value="Transparent" />
                                                                    </Trigger>
                                                                    <MultiTrigger>
                                                                        <MultiTrigger.Conditions>
                                                                            <Condition Property="IsMouseOver" Value="True" />
                                                                            <Condition Property="SortDirection" Value="{x:Null}" />
                                                                        </MultiTrigger.Conditions>
                                                                        <Setter Property="Background" Value="{StaticResource GridColumnHeaderGradientMouseOver}" />
                                                                        <Setter Property="BorderBrush" Value="Gray" />
                                                                    </MultiTrigger>
                                                                    <MultiTrigger>
                                                                        <MultiTrigger.Conditions>
                                                                            <Condition Property="IsMouseOver" Value="true" />
                                                                            <Condition Property="SortDirection" Value="{x:Null}" />
                                                                        </MultiTrigger.Conditions>
                                                                        <Setter Property="Background" Value="{StaticResource GridColumnHeaderGradientMouseOver}" />
                                                                        <Setter Property="BorderBrush" Value="Gray" />
                                                                    </MultiTrigger>
                                                                    <Trigger Property="SortDirection" Value="Ascending">
                                                                        <Setter Property="Background" Value="{StaticResource GridRowSeletecGradient}" />
                                                                        <Setter TargetName="columnHeaderLeftBorder" Property="Background" Value="{StaticResource GridRowSeletecGradient}" />
                                                                        <Setter TargetName="sortDirectionUp" Property="Visibility" Value="Visible" />
                                                                    </Trigger>
                                                                    <Trigger Property="SortDirection" Value="Descending">
                                                                        <Setter Property="Background" Value="{StaticResource GridRowSeletecGradient}" />
                                                                        <Setter TargetName="columnHeaderLeftBorder" Property="Background" Value="{StaticResource GridRowSeletecGradient}" />
                                                                        <Setter TargetName="sortDirectionDown" Property="Visibility" Value="Visible" />
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </DataGridColumnHeadersPresenter.Resources>
                                        </DataGridColumnHeadersPresenter>
                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                                Grid.Row="1"
                                                                Grid.ColumnSpan="2"
                                                                CanContentScroll="{TemplateBinding CanContentScroll}" />
                                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                                   Grid.Row="1"
                                                   Grid.Column="2"
                                                   Maximum="{TemplateBinding ScrollableHeight}"
                                                   Orientation="Vertical"
                                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                   Value="{Binding VerticalOffset,
                                                                   Mode=OneWay,
                                                                   RelativeSource={RelativeSource TemplatedParent}}" />
                                        <Grid Grid.Row="2" Grid.Column="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                       Grid.Column="1"
                                                       Maximum="{TemplateBinding ScrollableWidth}"
                                                       Orientation="Horizontal"
                                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                       Value="{Binding HorizontalOffset,
                                                                       Mode=OneWay,
                                                                       RelativeSource={RelativeSource TemplatedParent}}" />
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--
                            the trigger solves an issue with the setter for the alteration value , doesnt work on normal template setter
                            but works well when set from here
                        -->
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="AlternationCount" Value="2" />
                            <Setter Property="AlternatingRowBackground" Value="#FFF4F4F4" />
                            <Setter Property="MinRowHeight" Value="20" />
                            <Setter Property="FontFamily" Value="Tahoma" />
                            <Setter Property="FontSize" Value="11" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                    <ControlTemplate.Resources>
                        <!--  <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Green"/>  -->
                        <LinearGradientBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Offset="0" Color="#FFDCECFE" />
                            <GradientStop Offset="1" Color="#FFB6D5F7" />
                        </LinearGradientBrush>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="#FF344054" />
                    </ControlTemplate.Resources>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
        </Style.Triggers>
        <Style.Resources />
    </Style>

    <Style BasedOn="{StaticResource {x:Type DataGrid}}" TargetType="{x:Type local:EnhancedDataGrid}" />

    <cells:VirtualTableCellTemplateSelector x:Key="VirtualTableCellTemplateSelector" />

    <Style TargetType="{x:Type cells:VirtualTableCell}">
        <Setter Property="Focusable" Value="True" />
        <Setter Property="ContentTemplateSelector" Value="{StaticResource VirtualTableCellTemplateSelector}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type cells:VirtualTableCell}">
                    <Border Background="{TemplateBinding Background}" Focusable="True">
                        <Border Margin="2,0"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                            <!--  <TextBlock Text="Basic"/>  -->
                            <ContentPresenter x:Name="contentPresenter" VerticalAlignment="Center" ContentTemplate="{TemplateBinding Element}" />
                        </Border>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEditing" Value="True">
                            <Trigger.Setters>
                                <Setter TargetName="contentPresenter" Property="ContentTemplate" Value="{Binding EditingElement, RelativeSource={RelativeSource AncestorType=cells:VirtualTableCell}}" />
                            </Trigger.Setters>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="-2"
                                           Stroke="Red"
                                           StrokeDashArray="1 2"
                                           StrokeThickness="1" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsKeyboardFocusWithin" Value="True" />
                    <Condition Property="IsEditing" Value="False" />
                </MultiTrigger.Conditions>
                <!--  Hide the default focus visual style  -->
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type cells:VirtualTableCell}">
                            <Border Background="{TemplateBinding Background}">
                                <Border Margin="2,0" BorderThickness="1">
                                    <Border.BorderBrush>
                                        <VisualBrush>
                                            <VisualBrush.Visual>
                                                <Rectangle Width="{Binding ActualWidth,
                                                                           RelativeSource={RelativeSource FindAncestor,
                                                                                                          AncestorType=Border}}"
                                                           Height="{Binding ActualHeight,
                                                                            RelativeSource={RelativeSource FindAncestor,
                                                                                                           AncestorType=Border}}"
                                                           Stroke="{DynamicResource ResourceKey={x:Static DataGrid.FocusBorderBrushKey}}"
                                                           StrokeDashArray="2.0 6.0"
                                                           StrokeThickness="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}},
                                                                                     Path=BorderThickness.Left}" />
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </Border.BorderBrush>
                                    <ContentPresenter x:Name="contentPresenter" VerticalAlignment="Center" ContentTemplate="{TemplateBinding Element}" />
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEditing" Value="True">
                                    <Trigger.Setters>
                                        <Setter TargetName="contentPresenter" Property="ContentTemplate" Value="{Binding EditingElement, RelativeSource={RelativeSource AncestorType=cells:VirtualTableCell}}" />
                                    </Trigger.Setters>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
        </Style.Triggers>
    </Style>


    <Style BasedOn="{StaticResource {x:Type cells:VirtualTableCell}}" TargetType="{x:Type cells:VirtualTextTableCell}">
        <Setter Property="Element">
            <Setter.Value>
                <DataTemplate>
                    <!--  <TextBlock Text="{Binding Binding, RelativeSource={RelativeSource TemplatedParent}}" />  -->
                    <TextBlock cells:VirtualTableCell.BindingTargetProperty="{x:Static TextBlock.TextProperty}" Text="Smashing" />
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="EditingElement">
            <Setter.Value>
                <DataTemplate>
                    <!--  <TextBox Text="{Binding Binding, RelativeSource={RelativeSource TemplatedParent}}" />  -->
                    <TextBox cells:VirtualTableCell.BindingTargetProperty="{x:Static TextBox.TextProperty}" Text="Hello" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource {x:Type cells:VirtualTableCell}}" TargetType="{x:Type cells:ComboBoxVirtualTableCell}">
        <Setter Property="Element">
            <Setter.Value>
                <DataTemplate>
                    <!--  <TextBlock Text="{Binding Binding, RelativeSource={RelativeSource TemplatedParent}}" />  -->
                    <TextBlock cells:VirtualTableCell.BindingTargetProperty="{x:Static TextBlock.TextProperty}" Text="Smashing" />
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="EditingElement">
            <Setter.Value>
                <DataTemplate>
                    <ComboBox cells:VirtualTableCell.BindingTargetProperty="{x:Static ComboBox.SelectedItemProperty}" IsEditable="False" />
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEditing" Value="True" />
                    <Condition Property="IsEditable" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="EditingElement">
                    <Setter.Value>
                        <DataTemplate>
                            <ComboBox cells:VirtualTableCell.BindingTargetProperty="{x:Static ComboBox.TextProperty}" IsEditable="True" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource {x:Type cells:VirtualTableCell}}" TargetType="{x:Type cells:CheckBoxVirtualTableCell}">
        <Setter Property="Element">
            <Setter.Value>
                <DataTemplate>
                    <!--  <TextBlock Text="{Binding Binding, RelativeSource={RelativeSource TemplatedParent}}" />  -->
                    <CheckBox cells:VirtualTableCell.BindingTargetProperty="{x:Static CheckBox.IsCheckedProperty}" IsHitTestVisible="False" />
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="EditingElement">
            <Setter.Value>
                <DataTemplate>
                    <!--  <TextBox Text="{Binding Binding, RelativeSource={RelativeSource TemplatedParent}}" />  -->
                    <CheckBox cells:VirtualTableCell.BindingTargetProperty="{x:Static CheckBox.IsCheckedProperty}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
