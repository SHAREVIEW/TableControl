<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
    xmlns:local="clr-namespace:MagicSoftware.Common.Controls.DataGrid">

    <!-- Brushes for the grid -->
    <LinearGradientBrush x:Key="GridColumnHeaderGradient" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FFFFFFFF" Offset="0.4" />
        <GradientStop Color="#FFEEEEEF" Offset="0.4" />
        <GradientStop Color="#FFDEDFE1" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="GridColumnHeaderGradientMouseOver" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FFFFFFFF" Offset="0.4" />
        <GradientStop Color="#FFE1E1E2" Offset="0.4" />
        <GradientStop Color="#FFD1D1D1" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="GridRowHeaderGradient" StartPoint="0,0" EndPoint="0.1,1">
        <GradientStop Color="#FFE6E6E6" Offset="0" />
        <GradientStop Color="#FFFEFEFE" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="GridRowSeletecGradient" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FFFEECB5" Offset="0" />
        <GradientStop Color="#FFFEECB5" Offset="0.4" />
        <GradientStop Color="#FFebd795" Offset="0.4001" />
        <GradientStop Color="#FFdec876" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="GridRowIndexHeaderGradient" StartPoint="0,0" EndPoint="0.1,1">
        <GradientStop Color="#FFE6E6E6" Offset="0" />
        <GradientStop Color="#FFFEFEFE" Offset="1" />
    </LinearGradientBrush>

    <!--<Style TargetType="DataGrid:FolderControl">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <DockPanel HorizontalAlignment="Stretch" Background="Transparent"  x:Name="HeaderRowDockPanel"   Margin="0,0,0,0"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="0,0,0,-1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid:FolderControl}" >
                    <ControlTemplate.Resources>
                        <ResourceDictionary>
                            <ResourceDictionary.MergedDictionaries>
                                <ResourceDictionary Source="pack://application:,,,/MagicSoftware.Common.Controls.DataGrid;component/Styles/DatagridDefaultRowStyles.xaml"/>
                            </ResourceDictionary.MergedDictionaries>
                        </ResourceDictionary>
                    </ControlTemplate.Resources>
                    <Border  BorderBrush="#FFCDDDE5" BorderThickness="0,0,0,2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Border BorderBrush="#FFE4ECF1" BorderThickness="0,0,0,1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Border x:Name="folderBorder" BorderThickness="0" Height="{TemplateBinding Height}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFE9F0F4" />
                                        <GradientStop Color="#FFDDE6ED" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition  Width="50"/>
                                        <ColumnDefinition  Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Expander x:Name="HeaderRowExpander" Width="50" Grid.Column="0" Margin="0,0,0,1"
                                              IsExpanded="{Binding Path=IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                              Style="{StaticResource DGDeafultGroupExpander}" >
                                        <Expander.Header>
                                            <StackPanel Orientation="Horizontal">
                                                <Image x:Name="img" />
                                            </StackPanel>
                                        </Expander.Header>
                                    </Expander>
                                    <ItemsPresenter Grid.Column="1" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                                </Grid>
                            </Border>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsItemSelected}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="folderBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--<Style x:Key="MgDataGridRowHeaderWithId"  TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                    <Grid>
                        <Border BorderBrush="Transparent"  x:Name="brdr" BorderThickness="0" Background="{StaticResource GridRowIndexHeaderGradient}" >
                            <TextBlock  Margin="4,0" x:Name="txt" Foreground="#FF5F76A2" Text="{Binding Path=Data.Id}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger  Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=DataGridRow}}" Value="true">
                            <Setter Property="Background" TargetName="brdr" Value="#FFE5F1F1" />
                        </DataTrigger>

                        <DataTrigger  Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=DataGridRow}}" Value="true">
                            <Setter Property="Background" TargetName="brdr" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </DataTrigger>
                        <DataTrigger  Binding="{Binding IsItemSelected}" Value="true">
                            <Setter Property="Background" TargetName="brdr" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    <!--<Style x:Key="MgDataGridRowHeaderNoId"  TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                    <Grid>
                        <Border BorderBrush="Transparent"  x:Name="brdr" BorderThickness="0" Background="{StaticResource GridRowIndexHeaderGradient}" >
                            <TextBlock  Margin="4,0" x:Name="txt" Foreground="#FF5F76A2" Text="{Binding Path=Id}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger  Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=DataGridRow}}" Value="true">
                            <Setter Property="Background" TargetName="brdr" Value="#FFE5F1F1" />
                        </DataTrigger>

                        <DataTrigger  Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=DataGridRow}}" Value="true">
                            <Setter Property="Background" TargetName="brdr" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </DataTrigger>
                        <DataTrigger  Binding="{Binding IsItemSelected}" Value="true">
                            <Setter Property="Background" TargetName="brdr" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->


    <DataTemplate x:Key="SimpleTextCellTemplate">
        <TextBlock Text="{Binding}" Margin="2,0" />
    </DataTemplate>

    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeWE" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--<Style TargetType="{x:Type MgDataGrid:MgDataGrid}">
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="Background" Value="Green" />
        <Setter Property="RowBackground" Value="White" />
        <Setter Property="AlternatingRowBackground" Value="#FFF4F4F4" />
        <Setter Property="AlternationCount" Value="2" />
        

        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="SelectionMode" Value="Extended" />
        <Setter Property="RowHeight" Value="19" />
        <Setter Property="Foreground" Value="#FF000000" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="BorderBrush" Value="#FFA0A0A0" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="CanUserResizeColumns" Value="True" />
        <Setter Property="RowDetailsVisibilityMode" Value="Collapsed" />

        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MgDataGrid:MgDataGrid}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1" />
                                        <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" />
                                        <Grid Grid.Column="1" Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" />
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
        </Style.Triggers>
    </Style>-->

    <Style TargetType="{x:Type DataGridCell}">

        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border BorderThickness="1" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Margin="8,0,8,0" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <!-- Background of a selected line -->
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/> <!-- Value="#FFB1E1AF" -->
                <Setter Property="Foreground" Value="#FF000000" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="DataGridRow">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFE5F1F1"/>
            </Trigger>

            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderBrush" Value="#FF688CAF" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="MinRowHeight" Value="20" />
        <Setter Property="AlternationCount" Value="2" />
        <Setter Property="AlternatingRowBackground" Value="#fff4f4f4" />
        <Setter Property="RowHeaderWidth" Value="0" />
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="BorderThickness" Value="1" />

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"  BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <!--<Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource GridRowSeletecGradient}" />
                        </Trigger>-->
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, 
                                            TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, 
                                            Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                                            RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, 
                                            Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}">
                                            <DataGridColumnHeadersPresenter.Resources>
                                                <Style TargetType="{x:Type DataGridColumnHeader}">
                                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                                    <Setter Property="Background" Value="{DynamicResource GridColumnHeaderGradient}" />
                                                    <Setter Property="SnapsToDevicePixels" Value="true" />
                                                    <Setter Property="Foreground" Value="#FF344054" />
                                                    <Setter Property="FontFamily" Value="Tahoma" />
                                                    <Setter Property="FontWeight" Value="Normal" />
                                                    <Setter Property="FontSize" Value="12" />
                                                    <Setter Property="Padding" Value="8,0,8,0" />
                                                    <Setter Property="Height" Value="22" />
                                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                                    <Setter Property="BorderBrush" Value="#FFB2B2B2" />
                                                    <Setter Property="BorderThickness" Value="0,1,0,1" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                                                <ControlTemplate.Resources>


                                                                </ControlTemplate.Resources>
                                                                <Grid>
                                                                    <Microsoft_Windows_Themes:DataGridHeaderBorder SortDirection="{TemplateBinding SortDirection}" IsHovered="{TemplateBinding IsMouseOver}" IsPressed="{TemplateBinding IsPressed}" IsClickable="{TemplateBinding CanUserSort}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}" SeparatorBrush="{TemplateBinding SeparatorBrush}">
                                                                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                                                                    </Microsoft_Windows_Themes:DataGridHeaderBorder>

                                                                    <Border Background="#FFFFFFFF" x:Name="columnHeaderLeftBorder"  Width="1" HorizontalAlignment="Left"></Border>
                                                                    <Border Background="#FFC8C9CD" x:Name="columnHeaderRightBorder" Width="1" HorizontalAlignment="Right"></Border>

                                                                    <!--<Path Data="M0,0 L4,0 L2,2 L0,0" x:Name="sortDirectionArrow"  Fill="#FFF4F4F5" Visibility="Hidden" HorizontalAlignment="Center"  Margin="0,3,0,0" Stroke="Black" VerticalAlignment="Top" Height="7" Width="7"/>-->

                                                                    <DockPanel LastChildFill="False" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,5,0">
                                                                        <!--<Path Data="M0,0 L4,0 L2,2 L0,0" x:Name="sortDirectionUp"  Fill="Black" Visibility="Collapsed" HorizontalAlignment="Center"  Margin="0,3,0,0" Stroke="Black" VerticalAlignment="Top" Height="9" Width="9"/>
                                                                        <Path Data="M0,0 L4,0 L2,-2 L0,0" x:Name="sortDirectionDown"  Fill="Black" Visibility="Collapsed" HorizontalAlignment="Center"  Margin="0,3,0,0" Stroke="Black" VerticalAlignment="Top" Height="9" Width="9"/>-->
                                                                        <Path x:Name="sortDirectionUp"  Visibility="Collapsed" DockPanel.Dock="Top" Stroke="Black" StrokeThickness="0">
                                                                            <Path.Data>
                                                                                <PathGeometry>
                                                                                    <PathFigure StartPoint="0.0,4.0" IsClosed="True">
                                                                                        <PathFigure.Segments>
                                                                                            <LineSegment Point="4.0,0.0"/>
                                                                                            <LineSegment Point="8.0,4.0"/>
                                                                                        </PathFigure.Segments>
                                                                                    </PathFigure>
                                                                                </PathGeometry>
                                                                            </Path.Data>

                                                                            <Path.Fill>
                                                                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                                                    <LinearGradientBrush.GradientStops>
                                                                                        <GradientStop Color="#FF333333" Offset="0.0"/>
                                                                                        <!--<GradientStop Color="#FF605E72" Offset="0.1"/>-->
                                                                                        <GradientStop Color="#FF555555" Offset="1.0"/>
                                                                                    </LinearGradientBrush.GradientStops>
                                                                                </LinearGradientBrush>
                                                                            </Path.Fill>
                                                                        </Path>
                                                                        <Path x:Name="sortDirectionDown" Visibility="Collapsed"  DockPanel.Dock="Top" Stroke="Black" StrokeThickness="0">
                                                                            <Path.Data>
                                                                                <PathGeometry>
                                                                                    <PathFigure StartPoint="0.0,0.0" IsClosed="True">
                                                                                        <PathFigure.Segments>
                                                                                            <LineSegment Point="8.0,0.0"/>
                                                                                            <LineSegment Point="4.0,4.0"/>
                                                                                        </PathFigure.Segments>
                                                                                    </PathFigure>
                                                                                </PathGeometry>
                                                                            </Path.Data>

                                                                            <Path.Fill>
                                                                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                                                    <LinearGradientBrush.GradientStops>
                                                                                        <GradientStop Color="#FF333333" Offset="0.0"/>
                                                                                        <!--<GradientStop Color="#FF605E72" Offset="0.1"/>-->
                                                                                        <GradientStop Color="#FF555555" Offset="1.0"/>
                                                                                    </LinearGradientBrush.GradientStops>
                                                                                </LinearGradientBrush>
                                                                            </Path.Fill>
                                                                        </Path>
                                                                    </DockPanel>
                                                                    <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}" />
                                                                    <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}" />
                                                                </Grid>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsEnabled" Value="True">
                                                                        <Setter Property="FontFamily" Value="Tahoma" />
                                                                        <Setter Property="FontWeight" Value="Normal" />
                                                                        <Setter Property="FontSize" Value="11" />
                                                                    </Trigger>
                                                                    <Trigger Property="SortDirection" Value="{x:Null}">
                                                                        <Setter Property="Background" Value="{StaticResource GridColumnHeaderGradient}" />
                                                                        <Setter Property="BorderBrush" Value="Transparent" />
                                                                    </Trigger>
                                                                    <MultiTrigger>
                                                                        <MultiTrigger.Conditions>
                                                                            <Condition Property="IsMouseOver" Value="True" />
                                                                            <Condition Property="SortDirection" Value="{x:Null}" />
                                                                        </MultiTrigger.Conditions>
                                                                        <Setter Property="Background" Value="{StaticResource GridColumnHeaderGradientMouseOver}" />
                                                                        <Setter Property="BorderBrush" Value="Gray" />
                                                                    </MultiTrigger>
                                                                    <MultiTrigger>
                                                                        <MultiTrigger.Conditions>
                                                                            <Condition Property="IsMouseOver" Value="true" />
                                                                            <Condition Property="SortDirection" Value="{x:Null}" />
                                                                        </MultiTrigger.Conditions>
                                                                        <Setter Property="Background" Value="{StaticResource GridColumnHeaderGradientMouseOver}" />
                                                                        <Setter Property="BorderBrush" Value="Gray" />
                                                                    </MultiTrigger>
                                                                    <Trigger Property="SortDirection" Value="Ascending">
                                                                        <Setter Property="Background" Value="{StaticResource GridRowSeletecGradient}" />
                                                                        <Setter Property="Background" Value="{StaticResource GridRowSeletecGradient}" TargetName="columnHeaderLeftBorder"/>
                                                                        <Setter Property="Visibility" Value="Visible" TargetName="sortDirectionUp"/>
                                                                    </Trigger>
                                                                    <Trigger Property="SortDirection" Value="Descending">
                                                                        <Setter Property="Background" Value="{StaticResource GridRowSeletecGradient}" />
                                                                        <Setter Property="Background" Value="{StaticResource GridRowSeletecGradient}" TargetName="columnHeaderLeftBorder"/>
                                                                        <Setter Property="Visibility" Value="Visible"  TargetName="sortDirectionDown" />
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </DataGridColumnHeadersPresenter.Resources>
                                        </DataGridColumnHeadersPresenter>
                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1" />
                                        <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" 
                                                   Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
                                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                                   ViewportSize="{TemplateBinding ViewportHeight}" />
                                        <Grid Grid.Column="1" Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" 
                                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" 
                                                       Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                                       ViewportSize="{TemplateBinding ViewportWidth}" />
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- the trigger solves an issue with the setter for the alteration value , doesnt work on normal template setter 
                                but works well when set from here -->
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="AlternationCount" Value="2"/>
                            <Setter Property="AlternatingRowBackground" Value="#FFF4F4F4" />
                            <Setter Property="MinRowHeight" Value="20" />
                            <Setter Property="FontFamily" Value="Tahoma" />
                            <Setter Property="FontSize" Value="11" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                    <ControlTemplate.Resources>
                        <!--<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Green"/>-->
                        <LinearGradientBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Color="#FFDCECFE" Offset="0" />
                            <GradientStop Color="#FFB6D5F7" Offset="1" />
                        </LinearGradientBrush>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="#FF344054" />
                    </ControlTemplate.Resources>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
        </Style.Triggers>
        <Style.Resources>


        </Style.Resources>
    </Style>

    <Style TargetType="{x:Type local:EnhancedDataGrid}" BasedOn="{StaticResource {x:Type DataGrid}}"/>
</ResourceDictionary>
